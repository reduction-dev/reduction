syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "proto/snapshotpb/snapshot.proto";
import "proto/jobpb/job.proto";
import "handlerpb/handler.proto";
option go_package = "reduction.dev/reduction/proto/workerpb";

package worker;

service Operator {
  rpc Start(StartOperatorRequest) returns (Empty);
  rpc HandleEvent(HandleEventRequest) returns (Empty);
}

service SourceRunner {
  rpc Start(StartSourceRunnerRequest) returns (Empty);
  rpc StartCheckpoint(StartCheckpointRequest) returns (Empty);
}

message StartOperatorRequest {
  repeated string operator_ids = 1;
  repeated string source_runner_ids = 2;
  repeated snapshot.OperatorCheckpoint checkpoints = 3;
  int32 key_group_count = 4;
  repeated Sink sinks = 5;
  string storage_location = 6;
}

message Sink {
  message HTTPAPI {
    string addr = 1;
  }

  message Print {}

  oneof config {
    HTTPAPI http_api_config = 1;
    Print print_config = 2;
  }
}

message Empty{}

message HandleEventRequest {
  string sender_id = 1;
  oneof event {
    dev.reduction.handler.KeyedEvent keyed_event = 2;
    Watermark watermark = 3;
    CheckpointBarrier checkpoint_barrier = 4;
    SourceCompleteEvent source_complete = 5;
  }
}

message UserEvent {
  bytes key = 1;
  bytes value = 2; 
  google.protobuf.Timestamp timestamp = 3;
}

message CheckpointBarrier {
  uint64 checkpoint_id = 1;
}

message SourceCompleteEvent {}

message Watermark {
  google.protobuf.Timestamp timestamp = 2; 
}

message SourceSplit {
  string split_id = 1;
  string source_id = 2;
  bytes cursor = 3;
}

message StartSourceRunnerRequest {
  repeated SourceSplit splits = 1;
  repeated job.NodeIdentity operators = 2;
  int32 key_group_count = 3;
  repeated Source sources = 4;
}

message StartCheckpointRequest {
  uint64 checkpoint_id = 1;
}

message Source {
  message HTTPAPI {
    string addr = 1;
    repeated string topics = 2;
  }

  message Kinesis {
    string stream_arn = 1;
    string endpoint = 2;
  }

  message Embedded {
    int32 split_count = 1;
    int32 batch_size = 2;
    string generator = 3;
  }

  oneof config {
    HTTPAPI http_api_config = 1;
    Kinesis kinesis_config = 2;
    Embedded embedded_config = 3;
  }
}

